<?xml version="1.0" encoding="utf-8" ?>
<otrs_package version="1.1">
    <Name>RTT-JiraWebhook</Name>
    <Version>1.2.0</Version>
    <Vendor>Dassault Systemes 3DEXCITE GmbH</Vendor>
    <URL>http://3dexcite.com/</URL>
    <License>GNU AFFERO GENERAL PUBLIC LICENSE Version 3, November 2007</License>
    <ChangeLog Date="2013-12-22 10:39:55 +0100" Version="1.0.0">Initial release for OTRS 3.2.x</ChangeLog>
    <ChangeLog Date="2014-01-23 19:05:00 +0100" Version="1.0.1">Update to support OTRS 3.3.x while dropping support for OTRS 3.2.x</ChangeLog>
    <ChangeLog Date="2015-10-27 12:10:00 +0100" Version="1.1.0">Update to support OTRS 5.0.x while dropping support for OTRS 3.3.x. Module could also work on OTRS 4.x, but this has not been tested</ChangeLog>
    <ChangeLog Date="2018-10-02 16:20:00 +0100" Version="1.2.0">Update to support OTRS 6.0.x while dropping support for older OTRS-version</ChangeLog>
    <Description Lang="en">Integrates Jira-Webhooks into OTRS</Description>
    <Description Lang="de">Integriert Jira-Webhooks in OTRS</Description>
    <Framework>6.0.x</Framework>
    <CodeInstall Type="post">

        # Add new State &quot;wait JIRA&quot;
        use Kernel::System::State;
        use Kernel::System::DynamicField;
        use Data::Dumper;

        $Self-&gt;{StateObject} = Kernel::System::State-&gt;new(
            ConfigObject =&gt; $Self-&gt;{ConfigObject},
            LogObject    =&gt; $Self-&gt;{LogObject},
            DBObject     =&gt; $Self-&gt;{DBObject},
            MainObject   =&gt; $Self-&gt;{MainObject},
            EncodeObject =&gt; $Self-&gt;{EncodeObject},
        );

        $Self-&gt;{StateObject}-&gt;StateAdd(
            Name    =&gt; 'wait JIRA',
            Comment =&gt; 'Tickets that wait for a JIRA-Update to occur',
            ValidID =&gt; 1,
            TypeID  =&gt; 3,
            UserID  =&gt; 1,
        );

        # Add Dynamic Fields
        $Self-&gt;{DynamicFieldObject} = Kernel::System::DynamicField-&gt;new( %{$Self} );
        my @dynamicfields = (
            {
                'Name' =&gt; 'JiraKey',
                'Label' =&gt; 'Jira-ID',
                'Type' =&gt; 'Text',
            },
            {
                'Name' =&gt; 'JiraSummary',
                'Label' =&gt; 'summary',
                'Type'  =&gt; 'Text',
            },
            {
                'Name' =&gt; 'JiraStatus',
                'Label' =&gt; 'Jira Status',
                'Type'  =&gt; 'IconText',
            },
            {
                'Name' =&gt; 'JiraIssueType',
                'Label' =&gt; 'Issue Type',
                'Type' =&gt; 'IconText',
            },
            {
                'Name'  =&gt; 'JiraPriority',
                'Label' =&gt; 'Priority',
                'Type' =&gt; 'IconText',
            },
            {
                'Name' =&gt; 'JiraAssignee',
                'Label' =&gt; 'Assignee',
                'Type' =&gt; 'IconText',
            },
            {
                'Name' =&gt; 'JiraLastChanged',
                'Label' =&gt; 'Last Changed',
                'Type' =&gt; 'DateTime',
            },
        );

        my $presentfields = scalar @{$Self-&gt;{DynamicFieldObject}-&gt;DynamicFieldList()};

        my $i = 1;
        for my $field (@dynamicfields) {
            my $FieldID = $Self-&gt;{DynamicFieldObject}-&gt;DynamicFieldAdd(
                Name       =&gt; $field-&gt;{'Name'},
                Label      =&gt; $field-&gt;{'Label'},
                FieldOrder =&gt; $presentfields + $i,
                FieldType  =&gt; $field-&gt;{'Type'},
                ObjectType =&gt; 'Ticket',
                Config     =&gt; { DefaultValue =&gt; '' },
                ValidID    =&gt; 1,
                UserID     =&gt; 1,
                );
                $i++;
        }
    </CodeInstall>
    <BuildDate>2018-10-02 14:25:00</BuildDate>
    <BuildHost>pstest.rtt.ag</BuildHost>
    <Filelist>
        <File Location="Kernel/Config/Files/XML/RTT-JiraWebhook.xml" Permission="644" Encode="Base64"></File>
        <File Location="Kernel/Modules/AgentTicketRTTwaitJira.pm" Permission="644" Encode="Base64">IwojIFJUVC1KaXJhV2ViaG9vawojCiMgQ29weXJpZ2h0IChDKSAyMDEzLTIwMTQgUmVhbHRpbWUgVGVjaG5vbG9neSBBRywgaHR0cDovL3J0dC5hZy8KIyBDb3B5cmlnaHQgKEMpIDIwMTQtMjAxOCBEYXNzYXVsdCBTeXN0ZW1lcyAzREVYQ0lURSBHbWJILCBodHRwOi8vM2RleGNpdGUuZGUvCiMKIyBCYXNlZCBvbiBabnVueTRPVFJTLVF1aWNrQ2xvc2UKIyBDb3B5cmlnaHQgKEMpIDIwMTMgWm51bnkgR21iSCwgaHR0cDovL3pudW55LmNvbS8KIwojIEF1dGhvcjogTWFydGluIEdyb3NzIDxtYXJ0aW4uZ3Jvc3NAM2RzLmNvbT4KIyBMaWNlbnNlOiBHTlUgQUZGRVJPIEdFTkVSQUwgUFVCTElDIExJQ0VOU0UgVmVyc2lvbiAzLCBOb3ZlbWJlciAyMDA3CiMKIyBUSElTIENPREUgQU5EIElORk9STUFUSU9OIEFSRSBQUk9WSURFRCAiQVMgSVMiIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZCiMgS0lORCwgRUlUSEVSIEVYUFJFU1NFRCBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRQojIElNUExJRUQgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EL09SIEZJVE5FU1MgRk9SIEEKIyBQQVJUSUNVTEFSIFBVUlBPU0UuCiMKcGFja2FnZSBLZXJuZWw6Ok1vZHVsZXM6OkFnZW50VGlja2V0UlRUd2FpdEppcmE7Cgp1c2Ugc3RyaWN0Owp1c2Ugd2FybmluZ3M7Cm5vIHdhcm5pbmdzICdyZWRlZmluZSc7Cgp1c2UgYmFzZSBxdyhLZXJuZWw6Ok1vZHVsZXM6OkFnZW50VGlja2V0QWN0aW9uQ29tbW9uKTsKCnN1YiBuZXcgewogICAgbXkgKCAkVHlwZSwgJVBhcmFtICkgPSBAXzsKCiAgICAjIGFsbG9jYXRlIG5ldyBoYXNoIGZvciBvYmplY3QKICAgIG15ICRTZWxmID0geyVQYXJhbX07CiAgICBibGVzcyggJFNlbGYsICRUeXBlICk7CgogICAgJFNlbGYtPntMYXlvdXRPYmplY3R9ID0gJEtlcm5lbDo6T00tPkdldCgnS2VybmVsOjpPdXRwdXQ6OkhUTUw6OkxheW91dCcpOwogICAgJFNlbGYtPntUaWNrZXRPYmplY3R9ID0gJEtlcm5lbDo6T00tPkdldCgnS2VybmVsOjpTeXN0ZW06OlRpY2tldCcpOwogICAgJFNlbGYtPntDb25maWdPYmplY3R9ID0gJEtlcm5lbDo6T00tPkdldCgnS2VybmVsOjpDb25maWcnKTsKCiAgICByZXR1cm4gJFNlbGY7Cn0KCnN1YiBSdW4gewogICAgbXkgKCAkU2VsZiwgJVBhcmFtICkgPSBAXzsKCiAgICAjIGNoZWNrIG5lZWRlZCBzdHVmZgogICAgaWYgKCAhJFNlbGYtPntUaWNrZXRJRH0gKSB7CiAgICAgICAgcmV0dXJuICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+RXJyb3JTY3JlZW4oCiAgICAgICAgICAgIE1lc3NhZ2UgPT4gJ05vIFRpY2tldElEIGlzIGdpdmVuIScsCiAgICAgICAgICAgIENvbW1lbnQgPT4gJ1BsZWFzZSBjb250YWN0IHRoZSBhZG1pbi4nLAogICAgICAgICk7CiAgICB9CgogICAgIyBjaGVjayBwZXJtaXNzaW9ucwogICAgbXkgJEFjY2VzcyA9ICRTZWxmLT57VGlja2V0T2JqZWN0fS0+VGlja2V0UGVybWlzc2lvbigKICAgICAgICBUeXBlICAgICA9PiAnY2xvc2UnLAogICAgICAgIFRpY2tldElEID0+ICRTZWxmLT57VGlja2V0SUR9LAogICAgICAgIFVzZXJJRCAgID0+ICRTZWxmLT57VXNlcklEfQogICAgKTsKCiAgICAjIGVycm9yIHNjcmVlbiwgZG9uJ3Qgc2hvdyB0aWNrZXQKICAgIGlmICggISRBY2Nlc3MgKSB7CiAgICAgICAgcmV0dXJuICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+Tm9QZXJtaXNzaW9uKAogICAgICAgICAgICBNZXNzYWdlICAgID0+ICJZb3UgbmVlZCAkU2VsZi0+e0NvbmZpZ30tPntQZXJtaXNzaW9ufSBwZXJtaXNzaW9ucyEiLAogICAgICAgICAgICBXaXRoSGVhZGVyID0+ICd5ZXMnLAogICAgICAgICk7CiAgICB9CgogICAgbXkgJFN0YXRlID0gJFNlbGYtPntDb25maWdPYmplY3R9LT5HZXQoJ1JUVDo6SmlyYVdlYmhvb2s6OndhaXRTdGF0ZScpOwogICAgaWYgKCRTdGF0ZSkgewogICAgICAgIG15ICRTdWNjZXNzID0gJFNlbGYtPntUaWNrZXRPYmplY3R9LT5UaWNrZXRTdGF0ZVNldCgKICAgICAgICAgICAgU3RhdGUgICAgPT4gJFN0YXRlLAogICAgICAgICAgICBUaWNrZXRJRCA9PiAkU2VsZi0+e1RpY2tldElEfSwKICAgICAgICAgICAgVXNlcklEICAgPT4gJFNlbGYtPntVc2VySUR9LAogICAgICAgICk7CiAgICAgICAgaWYgKCRTdWNjZXNzKSB7CiAgICAgICAgICAgICRTZWxmLT57VGlja2V0T2JqZWN0fS0+VGlja2V0TG9ja1NldCgKICAgICAgICAgICAgICAgIFRpY2tldElEID0+ICRTZWxmLT57VGlja2V0SUR9LAogICAgICAgICAgICAgICAgTG9jayAgICAgPT4gJ3VubG9jaycsCiAgICAgICAgICAgICAgICBVc2VySUQgICA9PiAkU2VsZi0+e1VzZXJJRH0sCiAgICAgICAgICAgICk7CiAgICAgICAgfQogICAgfQogICAgcmV0dXJuICRTZWxmLT57TGF5b3V0T2JqZWN0fS0+UmVkaXJlY3QoIE9QID0+ICRTZWxmLT57TGFzdFNjcmVlbk92ZXJ2aWV3fSApOwp9CjE7Cgo=</File>
        <File Location="Kernel/System/DynamicField/Driver/IconText.pm" Permission="644" Encode="Base64">IwojIFJUVC1KaXJhV2ViaG9vawojCiMgQ29weXJpZ2h0IChDKSAyMDEzLTIwMTQgUmVhbHRpbWUgVGVjaG5vbG9neSBBRywgaHR0cDovL3J0dC5hZy8KIyBDb3B5cmlnaHQgKEMpIDIwMTQtMjAxOCBEYXNzYXVsdCBTeXN0ZW1lcyAzREVYQ0lURSBHbWJILCBodHRwOi8vM2RleGNpdGUuZGUvCiMKIyBLZXJuZWwvU3lzdGVtL0R5bmFtaWNGaWVsZC9Ecml2ZXIvVGV4dC5wbSAtIERlbGVnYXRlIGZvciBEeW5hbWljRmllbGQgVGV4dCBEcml2ZXIKIyBDb3B5cmlnaHQgKEMpIDIwMDEtMjAxNCBPVFJTIEFHLCBodHRwOi8vb3Rycy5jb20vCiMKIyBBdXRob3I6IE1hcnRpbiBHcm9zcyA8bWFydGluLmdyb3NzQDNkcy5jb20+CiMgTGljZW5zZTogR05VIEFGRkVSTyBHRU5FUkFMIFBVQkxJQyBMSUNFTlNFIFZlcnNpb24gMywgTm92ZW1iZXIgMjAwNwojCiMgVEhJUyBDT0RFIEFORCBJTkZPUk1BVElPTiBBUkUgUFJPVklERUQgIkFTIElTIiBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWQojIEtJTkQsIEVJVEhFUiBFWFBSRVNTRUQgT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUKIyBJTVBMSUVEIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZIEFORC9PUiBGSVRORVNTIEZPUiBBCiMgUEFSVElDVUxBUiBQVVJQT1NFLgojCgojIC0tCiMgQ29weXJpZ2h0IChDKSAyMDAxLTIwMTggT1RSUyBBRywgaHR0cHM6Ly9vdHJzLmNvbS8KIyAtLQojIFRoaXMgc29mdHdhcmUgY29tZXMgd2l0aCBBQlNPTFVURUxZIE5PIFdBUlJBTlRZLiBGb3IgZGV0YWlscywgc2VlCiMgdGhlIGVuY2xvc2VkIGZpbGUgQ09QWUlORyBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbiAoR1BMKS4gSWYgeW91CiMgZGlkIG5vdCByZWNlaXZlIHRoaXMgZmlsZSwgc2VlIGh0dHBzOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvZ3BsLTMuMC50eHQuCiMgLS0KCnBhY2thZ2UgS2VybmVsOjpTeXN0ZW06OkR5bmFtaWNGaWVsZDo6RHJpdmVyOjpJY29uVGV4dDsKCnVzZSBzdHJpY3Q7CnVzZSB3YXJuaW5nczsKbm8gd2FybmluZ3MgJ3JlZGVmaW5lJzsKCnVzZSBLZXJuZWw6OlN5c3RlbTo6VmFyaWFibGVDaGVjayBxdyg6YWxsKTsKCnVzZSBwYXJlbnQgcXcoS2VybmVsOjpTeXN0ZW06OkR5bmFtaWNGaWVsZDo6RHJpdmVyOjpCYXNlVGV4dCk7CgpvdXIgQE9iamVjdERlcGVuZGVuY2llcyA9ICgKICAgICdLZXJuZWw6OkNvbmZpZycsCiAgICAnS2VybmVsOjpTeXN0ZW06OkR5bmFtaWNGaWVsZFZhbHVlJywKICAgICdLZXJuZWw6OlN5c3RlbTo6TWFpbicsCik7Cgo9aGVhZDEgTkFNRQoKS2VybmVsOjpTeXN0ZW06OkR5bmFtaWNGaWVsZDo6RHJpdmVyOjpUZXh0Cgo9aGVhZDEgREVTQ1JJUFRJT04KCkR5bmFtaWNGaWVsZHMgVGV4dCBEcml2ZXIgZGVsZWdhdGUKCj1oZWFkMSBQVUJMSUMgSU5URVJGQUNFCgpUaGlzIG1vZHVsZSBpbXBsZW1lbnRzIHRoZSBwdWJsaWMgaW50ZXJmYWNlIG9mIEw8S2VybmVsOjpTeXN0ZW06OkR5bmFtaWNGaWVsZDo6QmFja2VuZD4uClBsZWFzZSBsb29rIHRoZXJlIGZvciBhIGRldGFpbGVkIHJlZmVyZW5jZSBvZiB0aGUgZnVuY3Rpb25zLgoKPWhlYWQyIG5ldygpCgp1c3VhbGx5LCB5b3Ugd2FudCB0byBjcmVhdGUgYW4gaW5zdGFuY2Ugb2YgdGhpcwpieSB1c2luZyBLZXJuZWw6OlN5c3RlbTo6RHluYW1pY0ZpZWxkOjpCYWNrZW5kLT5uZXcoKTsKCj1jdXQKCnN1YiBuZXcgewogICAgbXkgKCAkVHlwZSwgJVBhcmFtICkgPSBAXzsKCiAgICAjIGFsbG9jYXRlIG5ldyBoYXNoIGZvciBvYmplY3QKICAgIG15ICRTZWxmID0ge307CiAgICBibGVzcyggJFNlbGYsICRUeXBlICk7CgogICAgIyBzZXQgZmllbGQgYmVoYXZpb3JzCiAgICAkU2VsZi0+e0JlaGF2aW9yc30gPSB7CiAgICAgICAgJ0lzQUNMUmVkdWNpYmxlJyAgICAgICAgICAgICAgID0+IDAsCiAgICAgICAgJ0lzTm90aWZpY2F0aW9uRXZlbnRDb25kaXRpb24nID0+IDEsCiAgICAgICAgJ0lzU29ydGFibGUnICAgICAgICAgICAgICAgICAgID0+IDEsCiAgICAgICAgJ0lzRmlsdHJhYmxlJyAgICAgICAgICAgICAgICAgID0+IDAsCiAgICAgICAgJ0lzU3RhdHNDb25kaXRpb24nICAgICAgICAgICAgID0+IDEsCiAgICAgICAgJ0lzQ3VzdG9tZXJJbnRlcmZhY2VDYXBhYmxlJyAgID0+IDEsCiAgICAgICAgJ0lzTGlrZU9wZXJhdG9yQ2FwYWJsZScgICAgICAgID0+IDEsCiAgICB9OwoKICAgICMgZ2V0IHRoZSBEeW5hbWljIEZpZWxkIEJhY2tlbmQgY3VzdG9tIGV4dGVuc2lvbnMKICAgIG15ICREeW5hbWljRmllbGREcml2ZXJFeHRlbnNpb25zCiAgICAgICAgPSAkS2VybmVsOjpPTS0+R2V0KCdLZXJuZWw6OkNvbmZpZycpLT5HZXQoJ0R5bmFtaWNGaWVsZHM6OkV4dGVuc2lvbjo6RHJpdmVyOjpJY29uVGV4dCcpOwoKICAgIEVYVEVOU0lPTjoKICAgIGZvciBteSAkRXh0ZW5zaW9uS2V5ICggc29ydCBrZXlzICV7JER5bmFtaWNGaWVsZERyaXZlckV4dGVuc2lvbnN9ICkgewoKICAgICAgICAjIHNraXAgaW52YWxpZCBleHRlbnNpb25zCiAgICAgICAgbmV4dCBFWFRFTlNJT04gaWYgIUlzSGFzaFJlZldpdGhEYXRhKCAkRHluYW1pY0ZpZWxkRHJpdmVyRXh0ZW5zaW9ucy0+eyRFeHRlbnNpb25LZXl9ICk7CgogICAgICAgICMgY3JlYXRlIGEgZXh0ZW5zaW9uIGNvbmZpZyBzaG9ydGN1dAogICAgICAgIG15ICRFeHRlbnNpb24gPSAkRHluYW1pY0ZpZWxkRHJpdmVyRXh0ZW5zaW9ucy0+eyRFeHRlbnNpb25LZXl9OwoKICAgICAgICAjIGNoZWNrIGlmIGV4dGVuc2lvbiBoYXMgYSBuZXcgbW9kdWxlCiAgICAgICAgaWYgKCAkRXh0ZW5zaW9uLT57TW9kdWxlfSApIHsKCiAgICAgICAgICAgICMgY2hlY2sgaWYgbW9kdWxlIGNhbiBiZSBsb2FkZWQKICAgICAgICAgICAgaWYgKAogICAgICAgICAgICAgICAgISRLZXJuZWw6Ok9NLT5HZXQoJ0tlcm5lbDo6U3lzdGVtOjpNYWluJyktPlJlcXVpcmVCYXNlQ2xhc3MoICRFeHRlbnNpb24tPntNb2R1bGV9ICkKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGllICJDYW4ndCBsb2FkIGR5bmFtaWMgZmllbGRzIGJhY2tlbmQgbW9kdWxlIgogICAgICAgICAgICAgICAgICAgIC4gIiAkRXh0ZW5zaW9uLT57TW9kdWxlfSEgJEAiOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICAjIGNoZWNrIGlmIGV4dGVuc2lvbiBjb250YWlucyBtb3JlIGJlaGF2aW9ycwogICAgICAgIGlmICggSXNIYXNoUmVmV2l0aERhdGEoICRFeHRlbnNpb24tPntCZWhhdmlvcnN9ICkgKSB7CgogICAgICAgICAgICAleyAkU2VsZi0+e0JlaGF2aW9yc30gfSA9ICgKICAgICAgICAgICAgICAgICV7ICRTZWxmLT57QmVoYXZpb3JzfSB9LAogICAgICAgICAgICAgICAgJXsgJEV4dGVuc2lvbi0+e0JlaGF2aW9yc30gfQogICAgICAgICAgICApOwogICAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gJFNlbGY7Cn0KCnN1YiBEaXNwbGF5VmFsdWVSZW5kZXIgewogICAgbXkgKCAkU2VsZiwgJVBhcmFtICkgPSBAXzsKCiAgICAjIHNldCBIVE1MT3V0cHV0IGFzIGRlZmF1bHQgaWYgbm90IHNwZWNpZmllZAogICAgaWYgKCAhZGVmaW5lZCAkUGFyYW17SFRNTE91dHB1dH0gKSB7CiAgICAgICAgJFBhcmFte0hUTUxPdXRwdXR9ID0gMTsKICAgIH0KCiAgICAjIGdldCByYXcgVGl0bGUgYW5kIFZhbHVlIHN0cmluZ3MgZnJvbSBmaWVsZCB2YWx1ZQogICAgbXkgJFZhbHVlID0gZGVmaW5lZCAkUGFyYW17VmFsdWV9ID8gJFBhcmFte1ZhbHVlfSA6ICcnOwogICAgbXkgQHZhbHMgPSBzcGxpdCgnXHwnLCAkVmFsdWUpOwogICAgbXkgJFRpdGxlID0gJFZhbHVlOwoKICAgIGlmIChAdmFscykgewogICAgICAgICRWYWx1ZSA9ICc8aW1nIHNyYz0iJyAuICR2YWxzWzBdIC4gJyIvPiAnIC4gJHZhbHNbMV07CiAgICAgICAgJFRpdGxlID0gJHZhbHNbMV07CiAgICB9CgogICAgIyBzZXQgZmllbGQgbGluayBmb3JtIGNvbmZpZwogICAgbXkgJExpbmsgICAgICAgID0gJFBhcmFte0R5bmFtaWNGaWVsZENvbmZpZ30tPntDb25maWd9LT57TGlua30gICAgICAgIHx8ICcnOwogICAgbXkgJExpbmtQcmV2aWV3ID0gJFBhcmFte0R5bmFtaWNGaWVsZENvbmZpZ30tPntDb25maWd9LT57TGlua1ByZXZpZXd9IHx8ICcnOwoKICAgICMgY3JlYXRlIHJldHVybiBzdHJ1Y3R1cmUKICAgIG15ICREYXRhID0gewogICAgICAgIFZhbHVlICAgICAgID0+ICRWYWx1ZSwKICAgICAgICBUaXRsZSAgICAgICA9PiAkVGl0bGUsCiAgICAgICAgTGluayAgICAgICAgPT4gJExpbmssCiAgICAgICAgTGlua1ByZXZpZXcgPT4gJExpbmtQcmV2aWV3LAogICAgfTsKCiAgICByZXR1cm4gJERhdGE7Cn0KCjE7Cgo9aGVhZDEgVEVSTVMgQU5EIENPTkRJVElPTlMKClRoaXMgc29mdHdhcmUgaXMgcGFydCBvZiB0aGUgT1RSUyBwcm9qZWN0IChMPGh0dHBzOi8vb3Rycy5vcmcvPikuCgpUaGlzIHNvZnR3YXJlIGNvbWVzIHdpdGggQUJTT0xVVEVMWSBOTyBXQVJSQU5UWS4gRm9yIGRldGFpbHMsIHNlZQp0aGUgZW5jbG9zZWQgZmlsZSBDT1BZSU5HIGZvciBsaWNlbnNlIGluZm9ybWF0aW9uIChHUEwpLiBJZiB5b3UKZGlkIG5vdCByZWNlaXZlIHRoaXMgZmlsZSwgc2VlIEw8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9ncGwtMy4wLnR4dD4uCgo9Y3V0Cg==</File>
        <File Location="bin/cgi-bin/jira.pl" Permission="755" Encode="Base64"></File>
    </Filelist>
</otrs_package>